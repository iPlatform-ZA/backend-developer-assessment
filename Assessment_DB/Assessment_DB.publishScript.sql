/*
Deployment script for Assessment_DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Assessment_DB"
:setvar DefaultFilePrefix "Assessment_DB"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL13.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = ALL, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 367), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE = OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[ArtistAliases]...';


GO
CREATE TABLE [dbo].[ArtistAliases] (
    [ArtistIdentifier] UNIQUEIDENTIFIER NOT NULL,
    [Alias]            NVARCHAR (100)   NOT NULL
);


GO
PRINT N'Creating [dbo].[Artists]...';


GO
CREATE TABLE [dbo].[Artists] (
    [ArtistIdentifier] UNIQUEIDENTIFIER NOT NULL,
    [Name]             NVARCHAR (100)   NOT NULL,
    [Country]          NVARCHAR (5)     NOT NULL,
    PRIMARY KEY CLUSTERED ([ArtistIdentifier] ASC)
);


GO
PRINT N'Creating [dbo].[FK_ArtistAliases_Artist]...';


GO
ALTER TABLE [dbo].[ArtistAliases]
    ADD CONSTRAINT [FK_ArtistAliases_Artist] FOREIGN KEY ([ArtistIdentifier]) REFERENCES [dbo].[Artists] ([ArtistIdentifier]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7a7cc732-810b-434c-84e8-907221d08b92')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7a7cc732-810b-434c-84e8-907221d08b92')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '102d48d9-d566-4939-b11e-4c27d266358f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('102d48d9-d566-4939-b11e-4c27d266358f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bd4ed804-d79a-49f0-af34-a0532a20f41f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bd4ed804-d79a-49f0-af34-a0532a20f41f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '2bd870b8-d39d-45a9-944b-8876dd6d6eb1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('2bd870b8-d39d-45a9-944b-8876dd6d6eb1')

GO

GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/
INSERT INTO [dbo].[Artists] (ArtistIdentifier, Name, Country) VALUES 
('65f4f0c5-ef9e-490c-aee3-909e7ae6b2ab', N'Metallica', 'US'),
('650e7db6-b795-4eb5-a702-5ea2fc46c848', N'Lady Gaga', 'US'),
('c44e9c22-ef82-4a77-9bcd-af6c958446d6', N'Mumford & Sons', 'GB'),
('435f1441-0f43-479d-92db-a506449a686b', N'Mott the Hoople', 'GB'),
('a9044915-8be3-4c7e-b11f-9e2d2ea0a91e', N'Megadeth', 'US'),
('b625448e-bf4a-41c3-a421-72ad46cdb831', N'John Coltrane', 'US'),
('d700b3f5-45af-4d02-95ed-57d301bda93e', N'Mogwai', 'GB'),
('144ef525-85e9-40c3-8335-02c32d0861f3', N'John Mayer', 'US'),
('18fa2fd5-3ef2-4496-ba9f-6dae655b2a4f', N'Johnny Cash', 'US'),
('6456a893-c1e9-4e3d-86f7-0008b0a3ac8a', N'Jack Johnson', 'US'),
('f1571db1-c672-4a54-a2cf-aaa329f26f0b', N'John Frusciante', 'US'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'Elton John', 'GB'),
('24f8d8a5-269b-475c-a1cb-792990b0b2ee', N'Rancid', 'US'),
('29f3e1bf-aec1-4d0a-9ef3-0cb95e8a3699', N'Transplants', 'US'),
('931e1d1f-6b2f-4ff8-9f70-aa537210cd46', N'Operation Ivy', 'US');

INSERT INTO ArtistAliases (ArtistIdentifier, Alias) VALUES
('65f4f0c5-ef9e-490c-aee3-909e7ae6b2ab', N'Metalica'),
('65f4f0c5-ef9e-490c-aee3-909e7ae6b2ab', N'메탈리카'),
('650e7db6-b795-4eb5-a702-5ea2fc46c848', N'Lady Ga Ga'),
('650e7db6-b795-4eb5-a702-5ea2fc46c848', N'Stefani Joanne Angelina Germanotta'),
('435f1441-0f43-479d-92db-a506449a686b', N'Mott The Hoppie'),
('435f1441-0f43-479d-92db-a506449a686b', N'Mott The Hopple'),
('a9044915-8be3-4c7e-b11f-9e2d2ea0a91e', N'Megadeath'),
('b625448e-bf4a-41c3-a421-72ad46cdb831', N'John Coltraine'),
('b625448e-bf4a-41c3-a421-72ad46cdb831', N'John William Coltrane'),
('d700b3f5-45af-4d02-95ed-57d301bda93e', N'Mogwa'),
('18fa2fd5-3ef2-4496-ba9f-6dae655b2a4f', N'Johhny Cash'),
('18fa2fd5-3ef2-4496-ba9f-6dae655b2a4f', N'Jonny Cash'),
('6456a893-c1e9-4e3d-86f7-0008b0a3ac8a', N'Jack Hody Johnson'),
('f1571db1-c672-4a54-a2cf-aaa329f26f0b', N'John Anthony Frusciante'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'E. John'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'Elthon John'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'Elton Jphn'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'John Elton'),
('b83bc61f-8451-4a5d-8b8e-7e9ed295e822', N'Reginald Kenneth Dwight'),
('24f8d8a5-269b-475c-a1cb-792990b0b2ee', N'ランシド'),
('29f3e1bf-aec1-4d0a-9ef3-0cb95e8a3699', N'The Transplants'),
('931e1d1f-6b2f-4ff8-9f70-aa537210cd46', N'Op Ivy');



GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
